#REQUIRED MODULES
import sys
import argparse
import os
from reportlab.pdfgen.canvas import Canvas
import subprocess

#FUNCTION DEFINITIONS
def main():
    parser = argparse.ArgumentParser(prog=sys.argv[0],usage="toolkit.py [-h][-q, --quick] -i, --input <input file> -o <output file>")
    parser.add_argument('-q', "--quick", action='store_true',help="Enable quick analysis\n")
    parser.add_argument('-i','--infile', nargs='?', type=str, required=True, help = "Input the file to analyze\n", default=sys.stdin)
    parser.add_argument('-o','-outfile', nargs='?', type=str, required=False, help="Optional: name an output file to be written to your current direction with an overview of the file and it's contents.")
    args = parser.parse_args()
    print(args)
    if args.quick:
        print("Quick Analysis Enabled")
        cmdStrings = ['strings ','nm -l '] # enter the commands we want to run natively in Linux
        nativeCommandGenerator(cmdStrings, args)


def nativeCommandGenerator(cmdStrings, args):
    for cmds in cmdStrings:
        print(cmds)
        output = subprocess.check_output(cmds + f"{args.infile}", shell=True, text=True)
        print(output)

if __name__=='__main__':
    main()
